name: publish-latest-images
on:
  workflow_run:
    workflows: ["build-host", "build-guest"]
    types:
      - completed
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download host artifacts
      uses: actions/download-artifact@v4
      with:
        name: host-artifacts
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        path: dist/host
        
    - name: Download guest artifacts
      uses: actions/download-artifact@v4
      with:
        name: guest-artifacts
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        path: dist/guest

    - name: Update the Main Release
      run: |
        # Delete the existing release.
        gh release delete main --cleanup-tag --yes || true
        
        # Create the new release with guest images.
        gh release create main \
            dist/guest/**/*.efi \
            --title "Development Images" \
            --notes "Automated build of host and guest images from main branch." \
            --prerelease

        # Upload the host images with the dispatch Content-Type.
        RELEASE_ID=$(gh api repos/$GITHUB_REPOSITORY/releases/tags/main --jq .id)
        for efi_file in dist/host/**/*.efi; do
          filename=$(basename "$efi_file")
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/vnd.dispatch+efi" \
            --data-binary @"$efi_file" \
            "https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=$filename"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
